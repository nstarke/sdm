<!DOCTYPE html>
<html>
<head>
    <title>Starke Drum Machine</title>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <style type="text/css">
        .currentbeat, .validation
        {
            background-color: Red;
        }
    </style>
</head>
<body>
    <script type="text/javascript">
        var cursorpoint, loop;
        $(function () {

            hideval();
          
            $('.channelassignselect').live('change', function(){
                var channel = $(this).attr('data-channel-assign'), sample = $(this).val();
                $('tr[data-channel-tr="'+channel+'"]').attr('data-sample-selector', sample);      
            });
            
            $('#startsequencer').bind('click', function () {
                clearInterval(loop);
                resetcursor();
                var grid = $('#grid'), bpm = parseInt($('#bpm').val()), ticks = parseInt($('#ticks').val()), allselected = true;
                $('.channelassignselect').each(function(index, select){
                        if($(select).val() == ''){
                            allselected = false;
                                }
                        });
                if(allselected == true){
                    
                    if (!isNaN(bpm) && !isNaN(ticks)) {
                        
                        loop = setInterval('setcursor()', calculateinterval());
                    } else if (isNaN(bpm)) {
                        $('#bpmval').show();
                    } else if (isNaN(ticks)) {
                        $('#ticksval').show();
                    }
                }else{
                                      
                    $('#assignall').show();
                }
            });

            $('#stopsequencer').bind('click', function () {
                clearInterval(loop);
                resetcursor();
            });

            $('#creategrid').bind('click', function () {

                hideval();
                $('#grid').html('');
                $('#channelassignment').html('') ;                   
                var channels = parseInt($('#channels').val()), beats = parseInt($('#beats').val());

                if (!isNaN(channels) && !isNaN(beats)) {
                    var template = $('<td></td>'), gridappender = '<table>', channelappender ='';
                    for (var i = 0; i < channels + 1; i++) {
                        gridappender += '<tr data-channel-tr="'+(i+1)+'">'
                        if(i < channels){
                           channelappender += '<div><p>Channel "'+(i+1)+'" Assignment</p>'+createsampleselect(i + 1)+'<div>';       
                                  
                        }
                        if (i == channels) {
                            gridappender += '<td id="steps"> Step - </td>';
                        } else {
                            gridappender += '<td> Channel ' + (i + 1) + ' - </td>';

                        }
                        for (var j = 0; j < beats + 1; j++) {
                            if (j < beats) {
                                if (i == channels) {
                                    gridappender += '<td>' + (j + 1) + '</td>';
                                } else {

                                    gridappender += '<td data-channel="' + (i+1) + '" data-beat="' + (j+1) + '"><input type="checkbox" /></td>';
                                }
                            }
                        }
                        gridappender += '</tr>';
                    }
                    gridappender += '</table>'
                    $('#grid').append(gridappender);
                    $('#channelassignment').append(channelappender);
                    $('#sequencercontrols').show();
                } else if (isNaN(channels)) {
                    $('#channelsval').show();
                } else if (isNaN(beats)) {
                    $('#beatsval').show();
                }

            });
        });

        function hideval() {
            $('#channelsval, #beatsval, #sequencercontrols, #bpmval, #ticksval, #assignall').hide();
        }

        function setcursor() {
            var tds = $('#steps').parent().children().filter(':not(:first)'), beats = tds.length, current = $(tds[cursorpoint]);
            current.addClass('currentbeat');
            $(tds[Math.abs(cursorpoint - 1) % beats]).removeClass('currentbeat');
            if (cursorpoint == 0) {
                $(tds[beats - 1]).removeClass('currentbeat');
                samplefinder(beats);
            }else{
                samplefinder(cursorpoint);
            }

            cursorpoint = (cursorpoint + 1) % beats;
        }

        function calculateinterval() {
            var bpm = $('#bpm').val(), ticks = $('#ticks').val();
            return (1 / (bpm / 60) / ticks) * 1000;
        }
        
        function createsampleselect(index){
            var selectappender = '<select class="channelassignselect" data-channel-assign="'+index+'"><option value="">Not Selected</option>';
            $('#audiodiv').children().each(function(index, audio){
                var name = $(audio).attr('id');
                selectappender += '<option value="'+name+'">'+name+'</option>';
            });     
            selectappender += '</select>';
            return selectappender;
        }
        
        function player(ae){
            ae.play();
        }
        
        function resetcursor(){
            $('.currentbeat').removeClass('currentbeat');
            cursorpoint = 0;
        }
        
        function samplefinder(cursorpoint){
            $('td[data-beat="'+cursorpoint+'"]').each(function(index, td){
                var checkbox = $(td).find('input[type="checkbox"]'); 
                if(checkbox.is(':checked')){
                    var sample = checkbox.parent().parent().attr('data-sample-selector');
                    player($('#'+sample)[0])
                }                                    
            });
        }
    </script>
    <div id="gridcontrols">
        Channels:
        <input type="text" id="channels" value="4" /><p id="channelsval" class="validation">
            Please enter a number for channels</p>
        Beats:
        <input type="text" id="beats" value="16" /><p id="beatsval" class="validation">
            Please enter a number for beats</p>
        <input type="button" id="creategrid" value="Create Grid" /></div>
    <div id="grid">
    </div>
    <div id="sequencercontrols">
        BPM:
        <input type="text" id="bpm" value="125" /><p id="bpmval" class="validation">
            Please enter a number for BPM</p>
        <input type="text" id="ticks" value="4" /><p id="ticksval" class="validation">
            Please enter a number for ticks</p>
        <input type="button" id="startsequencer" value="Start Sequencer" />
        <input type="button" id="stopsequencer" value="Stop Sequencer" />
    </div>
    <p id="assignall" class="validation">Please assign a sample to all channels</p>
    <div id="channelassignment">
    
    </div>
    <div id="credits">
    Made by Nick Starke as a tech demo - nstarke_07@yahoo.com
    Samples courtesy of the 808. Use anything but Internet Explorer for this.
    </div>
    <div id="audiodiv">
        <audio id="bassdrum1" src="Bassdrum-01.wav" preload="auto" type="audio/wav"></audio>
        <audio id="bassdrum2" src="Bassdrum-02.wav" preload="auto" type="audio/wav"></audio>
        <audio id="bassdrum3" src="Bassdrum-03.wav" preload="auto" type="audio/wav"></audio>
        <audio id="bassdrum4" src="Bassdrum-04.wav" preload="auto" type="audio/wav"></audio>
        <audio id="bassdrum5" src="Bassdrum-05.wav" preload="auto" type="audio/wav"></audio>
        <audio id="cabasa" src="Cabasa.wav" preload="auto" type="audio/wav"></audio>
        <audio id="clap" src="Clap.wav" preload="auto" type="audio/wav"></audio>
        <audio id="claves" src="Claves.wav" preload="auto" type="audio/wav"></audio>
        <audio id="cowbell" src="Cowbell.wav" preload="auto" type="audio/wav"></audio>
        <audio id="crash1" src="Crash-01.wav" preload="auto" type="audio/wav"></audio>
        <audio id="crash2" src="Crash-02.wav" preload="auto" type="audio/wav"></audio>
        <audio id="hatclosed" src="HatClosed.wav" preload="auto" type="audio/wav"></audio>
        <audio id="hatopen" src="HatOpen.wav" preload="auto" type="audio/wav"></audio>
        <audio id="rimshot" src="Rimshot.wav" preload="auto" type="audio/wav"></audio>
        <audio id="snaredrum" src="Snaredrum.wav" preload="auto" type="audio/wav"></audio>
        <audio id="tomh" src="TomH.wav" preload="auto" type="audio/wav"></audio>
        <audio id="toml" src="TomL.wav" preload="auto" type="audio/wav"></audio>
        <audio id="tomm" src="TomM.wav" preload="auto" type="audio/wav"></audio>
    </div>
</body>
</html>
